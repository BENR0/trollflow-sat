# Use this as a config template for trollflow/bin/flow_processor.py

config:
  product_list: &product_list
    /tmp/bla.xml
  log_config:
    /tmp/log.ini
  # It is possible to lock each worker to reduce simultaneous CPU load and
  # memory usage.  Each step that has *use_lock* set as true will wait until
  # the next worker has completed the previous task.  This is a global value
  # that is used below.  The individual values can be set as seen fit for
  # the planned use. NOTE: dameon workers do not have locks, but will release
  # locking for the previous Workflow worker.
  use_locks: &use_locks
    true

work:
    - type: daemon
      name: listener
      components:
        - class: !!python/object:posttroll.listener.ListenerContainer
            topics:
              - /foo/bar
              - /foo/baz
    - type: daemon
      name: segment_gatherer
      components:
        - class: !!python/object:trollflow_sat.segment_gatherer.SegmentGathererContainer
            config: /tmp/seg_conf_msg.yaml
    - type: workflow
      name: scene_loader
      Workflow:
        - trollflow_sat.scene_loader.SceneLoader:
            product_list: *product_list
            use_lock: *use_locks
    - type: workflow
      name: pansharpener
      Workflow:
        - trollflow_sat.enhance.Pansharpener:
            # List of channels to sharpen
            pan_sharpen_chans:
              - VIS006
              - VIS008
              - IR_016
            # Keep the original channel data, add sharpened channels
            # as a new channel named "pan_"+chan.name. Default is to
            # overwrite.
            overwrite: False
            use_lock: *use_locks
    - type: workflow
      name: resampler
      Workflow:
        - trollflow_sat.resampler.Resampler:
            # Use "null" instead of "None"
            radius: null
            precompute: False
            nprocs: 1
            proj_method: nearest
            product_list: *product_list
            use_lock: *use_locks
    - type: workflow
      name: compositor
      Workflow:
        - trollflow_sat.compositor.CompositeGenerator:
            product_list: *product_list
            use_lock: *use_locks
    - type: daemon
      name: writer
      components:
        - class: !!python/object:trollflow_sat.writer.DataWriterContainer
            nameservers: []
            port: 0
            save_settings:
              compression: 6
              # Use "null" instead of "None"
              tags: null
              # Use "null" instead of "None"
              fformat: null
              # Use "null" instead of "None"
              gdal_options: null
              # Use "null" instead of "None"
              fformat: null
              # NOTE: blocksize needs to be 0 if GeoTIFF images area read
              # using Pillow
              blocksize: 0
            # By default writer doesn't lock the compositor, but that
            # can be done by setting use_lock to true
            # use_lock: true
